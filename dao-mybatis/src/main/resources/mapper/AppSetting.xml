<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.irwin13.winwork.basic.model.entity.app.AppSetting">
    <!--
    <cache type="org.mybatis.hazelcast.HazelcastCache" />
    <cache type="org.mybatis.hazelcast.LoggingHazelcastCache"
            eviction=""
            flushInterval=""
            readOnly=""
            size="" />
    -->

    <resultMap id="AppSettingResult" type="AppSetting">
        <result property="id" column="id"/>
        <result property="active" column="active"
                typeHandler="com.irwin13.winwork.mybatis.typehandler.OracleBooleanTypeHandler"/>
        <result property="createBy" column="create_by"/>
        <result property="createDate" column="create_date"/>
        <result property="lastUpdateBy" column="last_update_by"/>
        <result property="lastUpdateDate" column="last_update_date"/>

        <result property="code" column="code"/>
        <result property="description" column="description"/>
        <result property="stringValue" column="string_value"/>
        <result property="settingCategory" column="setting_category"/>
    </resultMap>

    <sql id="allField">
        id,
        code,
        description,
        string_value,
        setting_category,
        active,
        create_by,
        create_date,
        last_update_by,
        last_update_date
    </sql>

    <sql id="defaultWhere">
        WHERE 1=1
        <if test="code">
            AND code = #{code}
        </if>
        <if test="description">
            AND description = #{description}
        </if>
        <if test="numericValue">
            AND setting_category = #{settingCategory}
        </if>
        <if test="stringValue">
            AND string_value = #{stringValue}
        </if>
        <if test="columnName != null and sortMethod != null">
            ORDER BY ${columnName} ${sortMethod}
        </if>
    </sql>

    <sql id="defaultSearch">
        WHERE 1=1
        <if test="searchKeyword != null and searchKeyword != ''">
            AND (
            lower(code) LIKE #{searchKeyword} OR
            lower(description) LIKE #{searchKeyword} OR
            lower(string_value) LIKE #{searchKeyword} OR
            lower(setting_category) LIKE #{searchKeyword} OR
            )
        </if>
        <if test="columnName != null and sortMethod != null">
            ORDER BY ${columnName} ${sortMethod}
        </if>
    </sql>

    <select id="select" resultMap="AppSettingResult">
        SELECT
        <include refid="allField" />
        FROM app_setting
        <include refid="defaultWhere" />
    </select>

    <select id="selectCount" resultType="_long">
        SELECT count(id) AS total
        FROM app_setting
        <include refid="defaultWhere" />
    </select>

    <select id="selectSearch" resultMap="AppSettingResult">
        SELECT
        <include refid="allField" />
        FROM app_setting
        <include refid="defaultSearch" />
    </select>

    <select id="selectSearchCount" resultMap="AppSettingResult">
        SELECT count(id) AS total
        FROM app_setting
        <include refid="defaultSearch" />
    </select>

    <select id="selectById" resultMap="AppSettingResult">
        SELECT
        <include refid="allField" />
        FROM app_setting
        WHERE id = #{id}
    </select>

    <insert id="insert" parameterType="AppSetting">
        INSERT INTO app_setting
        (
        id, active, create_by, create_date, last_update_by, last_update_date,
        code, description, string_value, setting_category
        )
        VALUES
        (
        #{id}, #{active}, #{createBy}, #{createDate}, #{lastUpdateBy}, #{lastUpdateDate},
        #{code}, #{description}, #{stringValue}, #{settingCategory}
        )
    </insert>

    <update id="update" parameterType="AppSetting">
        UPDATE app_setting SET
        code = #{code},
        description = #{description},
        string_value = #{stringValue},
        setting_category = #{settingCategory},
        active = #{active},
        last_update_by = #{lastUpdateBy},
        last_update_date = #{lastUpdateDate}
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="AppSetting">
        DELETE FROM app_setting WHERE id = #{id}
    </delete>

</mapper>